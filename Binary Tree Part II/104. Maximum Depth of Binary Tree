/*void solve(TreeNode* root, int lev, int &maxa){
        if(root==NULL)
            return;
        if(lev>maxa)
            maxa = lev;
        solve(root->left, lev+1, maxa);
        solve(root->right, lev+1, maxa);
    }*/
    
    int maxDepth(TreeNode* root) {
       /* if(!root) return 0;
        int maxa = INT_MIN;
        solve(root,1,maxa); // using recursion
        return maxa;*/
        
        //queue approach
        if(!root) return 0;
        queue<pair<TreeNode*, int>> q;
        int maxa = INT_MIN;
        q.push({root,1});
        while(!q.empty()){
            auto curr = q.front();
            int lev = curr.second;
            q.pop();
            if(lev>maxa)
                maxa = lev;
            if(root->left)
                q.push({root->left,lev+1});
            if(root->right)
                q.push({root->right,lev+1});
        }
        return maxa;
    }
};
